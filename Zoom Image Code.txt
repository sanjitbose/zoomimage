=======================================================
COMPONENT CODE:
=======================================================

<aura:component implements="flexipage:availableForAllPageTypes,forceCommunity:availableForAllPageTypes,force:appHostable,force:hasRecordId" access="global">
	<aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    <div aura:id ="imgContainer" class="img-magnifier-container">
    	<img aura:id ="formImage" src= "{!$Resource.zommimgsrc}" onload="{!c.zoomImage}"/>
    </div>    
</aura:component>

=======================================================
CONTROLLER CODE:
=======================================================

({
	doInit : function(component, event, helper) {
		
	},
    
    zoomImage : function(component, event, helper) {
        var zoom = 2;
        var imgId = "formImage";
        var img, glass, w, h, bw;
        //var imgUrl = component.get("v.imageId");
        
        var imgUrl = event.target.src;
        img = event.target;
        //img = component.find(imgId);
        
        var imgH = event.target.height;
        var imgW = event.target.width;
        var imgZH = imgH * zoom;
        var imgZW = imgW * zoom;
        console.log('>>> img : '+event.target.height);
        /*create magnifier glass:*/
        //glass = document.createElement("DIV");
        //glass.setAttribute("class", "img-magnifier-glass");
        //
        
        $A.createComponent(
                "aura:html",
                 { 
                     tag: "div",
                     HTMLAttributes:{"id": "zoompane",
                                     "class": "img-magnifier-glass", 
                                     onmousemove: component.getReference("c.moveMagnifier"),
                                     "style": "background-image: url('"+ imgUrl +"');background-size:"+imgZW+"px "+imgZH+"px; background-repeat:no-repeat;"}
                 },
            
                 function(newcmp){
                     console.log('>>> newcmp : '+newcmp);
                      var container = component.find("imgContainer");
                      console.log('>>> imgContainer : '+container);
                      if (container.isValid()) {
                          var body = container.get("v.body");
                          console.log('>>> body : '+body);
                          body.unshift(newcmp);
                          container.set("v.body", body);
                      }
                 }
            );
    },
    
    
    moveMagnifier : function(component, e, helper){
        console.log("moving.............." +e.target);
        var pos, x, y, w, h;
        var bw = 3;
        var zoom = 2;
        var img = component.find("formImage");
        /*prevent any other actions that may occur when moving over the image*/
        e.preventDefault();
        /*get the cursor's x and y positions:*/
        pos = helper.getCursorPos(component, e, helper);
        console.log("pos.............. X : " + pos.x + "Pos .....Y : " + pos.y);
        //pos = getCursorPos(e);
        x = pos.x;
        y = pos.y;
        var glass = e.target;
        w = glass.offsetWidth / 2;
  		h = glass.offsetHeight / 2; 
        console.log("glass.offsetWidth.............. WIDTH : " + glass.offsetWidth + "glass.offsetHeight .....HEIGHT : " + glass.offsetHeight);
        /*prevent the magnifier glass from being positioned outside the image:*/
        if (x > img.width - (w / zoom)) {x = img.width - (w / zoom);}
        if (x < w / zoom) {x = w / zoom;}
        if (y > img.height - (h / zoom)) {y = img.height - (h / zoom);}
        if (y < h / zoom) {y = h / zoom;}
        /*set the position of the magnifier glass:*/
        //var glass = component.get("zoompane");
        glass.style.left = (x - w) + "px";
        glass.style.top = (y - h) + "px";
        //glass.style.left = (x - 0) + "px";
        //glass.style.top = (y - 0) + "px";
        /*display what the magnifier glass "sees":*/
        glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
   }
})

=======================================================
HELPER CODE:
=======================================================

({
	getCursorPos : function(component, e, helper) {
        var a, x = 0, y = 0;
        e = e || window.event;
        /*get the x and y positions of the image:*/
        var img = component.find("formImage");
        a = img.getElement().getBoundingClientRect();
        console.log("getCursorPos.............. LEFT : " + a.left + "getCursorPos .....TOP : " + a.top);
        console.log("e.pageX.............. e.pageX : " + e.pageX + "e.pageY .....e.pageY : " + e.pageY);
        /*calculate the cursor's x and y coordinates, relative to the image:*/
        x = e.pageX - a.left;
        y = e.pageY - a.top;
        /*consider any page scrolling:*/
        x = x - window.pageXOffset;
        y = y - window.pageYOffset;
        return {x : x, y : y};
  } 
})

=======================================================
STYLE CODE:
=======================================================

.THIS {box-sizing: border-box;}

.THIS .img-magnifier-container {
  position:relative;
}

.THIS .img-magnifier-glass {
  position: absolute;
  border: 3px solid #000;
  
  cursor: none;
  /*Set the size of the magnifier glass:*/
  width: 300px;
  height: 100px;
}
